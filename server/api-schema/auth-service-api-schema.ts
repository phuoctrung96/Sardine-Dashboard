/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/customers": {
    get: {
      parameters: {
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** List Active Customer Names */
        200: {
          headers: {};
          schema: definitions["customerNameList"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** notFound */
        404: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
    post: {
      parameters: {
        body: {
          /** Customer Name */
          body: definitions["newCustomer"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** New Customer get added */
        200: {
          headers: {};
          schema: definitions["customerCreation"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** StatusConflict Subject already exists */
        409: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
    delete: {
      parameters: {
        body: {
          /** clientID of the customer */
          body: definitions["clientID"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** Ok */
        200: {
          headers: {};
          schema: definitions["status"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** notFound */
        404: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
  };
  "/customers/authenticate": {
    post: {
      parameters: {
        body: {
          /** clientID and secretKey */
          body: definitions["authenticate"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** Ok */
        200: {
          headers: {};
          schema: definitions["status"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** Forbidden */
        403: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
  };
  "/customers/keys": {
    get: {
      parameters: {
        body: {
          /** Customer Name */
          body: definitions["clientID"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** List Active Customer keys */
        200: {
          headers: {};
          schema: definitions["customerList"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
    post: {
      parameters: {
        body: {
          /** clientID of the customer */
          body: definitions["clientID"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** New secretKey get added to the clientID */
        200: {
          headers: {};
          schema: definitions["customerCreation"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** NotFound */
        404: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
    delete: {
      parameters: {
        body: {
          /** clientID and secretKey of the customer */
          body: definitions["deleteKey"];
        };
        header: {
          "X-Request-ID": string;
        };
      };
      responses: {
        /** Ok */
        200: {
          headers: {};
          schema: definitions["status"];
        };
        /** BadRequest */
        400: {
          headers: {};
          schema: definitions["status"];
        };
        /** Unauthorized */
        401: {
          headers: {};
          schema: definitions["status"];
        };
        /** notFound */
        404: {
          headers: {};
          schema: definitions["status"];
        };
        /** Internal Server Error */
        500: {
          headers: {};
          schema: definitions["status"];
        };
      };
    };
  };
}

export interface definitions {
  /** @example [object Object] */
  status: {
    /** @example ok */
    status: string;
  };
  /** @example [object Object] */
  customerCreation: {
    /** @example c710703a-bbb1-49d3-b1d6-bd3d6388114e */
    clientID: string;
    /** @example 8579f585-cb25-4138-8e79-917eed8d7182 */
    secretKey: string;
    /** @example ok */
    status: string;
  };
  /** @example [object Object] */
  authenticate: {
    /** @example c710703a-bbb1-49d3-b1d6-bd3d6388114e */
    clientID: string;
    /** @example 8579f585-cb25-4138-8e79-917eed8d7182 */
    secretKey: string;
  };
  /** @example [object Object] */
  deleteKey: {
    /** @example c710703a-bbb1-49d3-b1d6-bd3d6388114e */
    clientID?: string;
    /** @example 8579f585-cb25-4138-8e79-917eed8d7182 */
    uuid: string;
  };
  /** @example [object Object] */
  newCustomer: {
    /** @example example.com */
    subject: string;
  };
  /** @example [object Object] */
  customerList: {
    keys: string[];
    /** @example ok */
    status: string;
  };
  /** @example [object Object] */
  customerNameList: {
    names: {
      /** @example moonpay */
      name?: string;
      /** @example c710703a-bbb1-49d3-b1d6-bd3d6388114e */
      clientID?: string;
    }[];
    /** @example ok */
    status: string;
  };
  customerNameList_names: {
    /** @example moonpay */
    name?: string;
  };
  /** @example [object Object] */
  clientID: {
    /** @example c710703a-bbb1-49d3-b1d6-bd3d6388114e */
    clientID: string;
  };
}

export interface responses {
  /** Ok */
  ok: {
    schema: definitions["status"];
  };
  /** Unauthorized */
  unauthorized: {
    schema: definitions["status"];
  };
  /** notFound */
  notFound: {
    schema: definitions["status"];
  };
  /** expired */
  expired: {
    schema: definitions["status"];
  };
}

export interface operations {}

export interface external {}
